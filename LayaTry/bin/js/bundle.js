var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./Script/GameUI");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Script/GameUI.ts", GameUI_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/start.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./Script/GameUI":3}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var WebSocketPipe_1 = require("./WebSocketPipe");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
var StandardObj = /** @class */ (function () {
    function StandardObj() {
    }
    StandardObj.TheWebSocketPipe = new WebSocketPipe_1.default();
    return StandardObj;
}());
exports.default = StandardObj;
},{"./GameConfig":1,"./WebSocketPipe":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var Main_1 = require("../Main");
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        GameUI.instance = _this;
        return _this;
    }
    GameUI.prototype.onClickDo = function (e) {
        // StandardObj.TheWebSocketPipe.sendMsgToSocket(this.TextInput.text)
        var msg = msgScheme.AMsg.create({
            head: msgScheme.AMsg.Head.Login_Request,
            loginRequest: {
                userId: this.TextInput.text,
                password: "bbb"
            }
        });
        console.log(msg);
        var buffer = msgScheme.AMsg.encode(msg).finish();
        console.log("Buffer:" + buffer);
        Main_1.default.TheWebSocketPipe.sendBinaryToSocket(buffer);
        this.ShowText.text = "";
        //  let aHead = msgScheme.AMsg.decode(buffer).head
        //  console.log("decode:"+aHead)
    };
    GameUI.prototype.onEnable = function () {
        this.SendButton.on(Laya.Event.CLICK, this, this.onClickDo);
        console.log("按鈕ok");
    };
    GameUI.prototype.inputShowText = function (ok) {
        if (ok) {
            this.ShowText.text = "login_ok";
        }
        else {
            this.ShowText.text = "login_fail";
        }
    };
    return GameUI;
}(layaMaxUI_1.ui.test.startUI));
exports.default = GameUI;
},{"../Main":2,"./../ui/layaMaxUI":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameUI_1 = require("./Script/GameUI");
var WebSocketPipe = /** @class */ (function () {
    function WebSocketPipe() {
        this.byte = new Laya.Byte();
        //这里我们采用小端
        this.byte.endian = Laya.Byte.LITTLE_ENDIAN;
        this.socket = new Laya.Socket();
        //这里我们采用小端
        this.socket.endian = Laya.Byte.LITTLE_ENDIAN;
        //建立连接
        this.socket.connectByUrl("ws://localhost:8080");
        this.socket.on(Laya.Event.OPEN, this, this.openHandler);
        this.socket.on(Laya.Event.MESSAGE, this, this.receiveHandler);
        this.socket.on(Laya.Event.CLOSE, this, this.closeHandler);
        this.socket.on(Laya.Event.ERROR, this, this.errorHandler);
    }
    WebSocketPipe.prototype.openHandler = function (event) {
        if (event === void 0) { event = null; }
        console.log("连接成功");
        //正确建立连接；
    };
    WebSocketPipe.prototype.receiveHandler = function (msg) {
        console.log(msg);
        this.byte.clear();
        this.byte.writeArrayBuffer(msg);
        this.byte.pos = 0;
        var aMsg = msgScheme.AMsg.decode(this.byte.readUint8Array(0, 100000));
        console.log(aMsg);
        switch (aMsg.head) {
            case msgScheme.AMsg.Head.Login_Response:
                GameUI_1.default.instance.inputShowText(aMsg.loginResponse.ok);
            default:
                console.log("unknow_message");
        }
        // let head = msgScheme.AMsg.decode(msg.buffer).head
        // console.log(head)
        // let buffer = new BufferReader(msg)
        // const aHead = aMsg.head
        // if (aHead == msgScheme.AMsg.Head.Login_Response) { 
        //        console.log("=====服务器回复登录结果：====="+ aMsg.loginResponse.ok+"==========")
        // }
        //接收到数据触发函数
    };
    WebSocketPipe.prototype.closeHandler = function (e) {
        if (e === void 0) { e = null; }
        //关闭事件
    };
    WebSocketPipe.prototype.errorHandler = function (e) {
        if (e === void 0) { e = null; }
        console.log("连接失败");
        //连接出错
    };
    WebSocketPipe.prototype.sendMsgToSocket = function (msg) {
        this.socket.send(msg);
    };
    WebSocketPipe.prototype.sendBinaryToSocket = function (buffer) {
        this.socket.send(buffer);
    };
    return WebSocketPipe;
}());
exports.default = WebSocketPipe;
},{"./Script/GameUI":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var startUI = /** @class */ (function (_super) {
            __extends(startUI, _super);
            function startUI() {
                return _super.call(this) || this;
            }
            startUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/start");
            };
            return startUI;
        }(Laya.Scene));
        test.startUI = startUI;
        REG("ui.test.startUI", startUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
